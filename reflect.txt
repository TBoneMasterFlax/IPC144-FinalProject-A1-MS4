1. I think we need to go through the pain of matching the expected output exactly because people want perfection, according to their insight. We programmers may not just be programming for ourselves, but for other people's sake as well. The workers that do the work can understand the pain that goes into meeting an expected output exactly as it is but other people may not know and may not care about it. Other people may not appreciate or understand all the input and outputs that comes with coding and only think that a desired result/output is the only result/output. Programmers need to match the expectations of their clients due to the human nature of everyone being individuals with different viewpoints, thoughts and emotions.

2. The factors that goes into naming a module or library is based entirely on the trend of its contents. If a module or library is all about string types, than it is bested to name it with a theme on strings to keep the functionality of the module/library as obvious as possible. It best practise to identify a module/library header and the source code file that defines the header file together because it will be a lot easier to find their contents without causing any confusing to the author of the code and to other programmers and force them to look into every single header and source code files to find a particular code.

3. I believe a cascading menu system framework replicates the connectivity of a tree and its branches. We start from a base structure, the base menu in this case, and every feature can branche out to show its distinctiveness to the user in the form of sub-menus. Each single branch that comes out of the base structure can have its own sub-branches and those sub-branches can branch out as long as the programmer can organize his features into appropriate groups. We did this in Milestone 4 as we have a menu and depending on what feature we want to access we will navigate through the menus and their sub-menus, which should be distinctive in their functionality, until we finally come accross the feature we want to use.